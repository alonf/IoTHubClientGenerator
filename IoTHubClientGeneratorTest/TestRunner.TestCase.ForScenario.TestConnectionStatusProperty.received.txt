IoTHubClientGenerator\IoTHubClientGenerator.Generator\MyIoTHubClientExtension.IoTHub.g.cs(30,20): error CS0103: The name 'deviceClient' does not exist in the current context
IoTHubClientGenerator\IoTHubClientGenerator.Generator\MyIoTHubClientExtension.IoTHub.g.cs(2,1): hidden CS8019: Unnecessary using directive.
(2,1): hidden CS8019: Unnecessary using directive.
IoTHubClientGenerator\IoTHubClientGenerator.Generator\MyIoTHubClientExtension.IoTHub.g.cs(1,1): hidden CS8019: Unnecessary using directive.
IoTHubClientGenerator\IoTHubClientGenerator.Generator\MyIoTHubClientExtension.IoTHub.g.cs(4,1): hidden CS8019: Unnecessary using directive.
IoTHubClientGenerator\IoTHubClientGenerator.Generator\MyIoTHubClientExtension.IoTHub.g.cs(6,1): hidden CS8019: Unnecessary using directive.

********************************************************************************

using IoTHubClientGeneratorSDK;
using Microsoft.Azure.Devices.Client;

namespace TestConnectionStatusProperty
{
    [IoTHub()]
    partial class MyIoTHubClient
    {
         [ConnectionStatus] 
         private (ConnectionStatus Status, ConnectionStatusChangeReason Reason) DeviceConnectionStatus { get; set; }
    }
}


********************************************************************************
using System;
using System.Diagnostics;
using System.Threading.Tasks;
using System.Threading;
using Microsoft.Azure.Devices.Client;
using Microsoft.Azure.Devices.Shared;
using IoTHubClientGeneratorSDK;

namespace TestConnectionStatusProperty
{
    public partial class MyIoTHubClient
    {
        public async Task InitIoTHubClientAsync()
        {
            await System.Threading.Tasks.Task.CompletedTask; //suppress async warning in case we don't generate any async call
            DeviceClient = CreateDeviceClient();
            DeviceClient.SetConnectionStatusChangesHandler((status, reason) =>
            {
                DeviceConnectionStatus = (status, reason);
            });
        }

        [Device(ConnectionString = "%ConnectionString%")]
        private DeviceClient DeviceClient { get; set; }

        private Microsoft.Azure.Devices.Client.DeviceClient CreateDeviceClient()
        {
            var theConnectionString = System.Environment.GetEnvironmentVariable("ConnectionString");
            var deviceClient1 = DeviceClient.CreateFromConnectionString(theConnectionString);
            return deviceClient;
        }
    }
}


